{"is_source_file": true, "format": "JavaScript", "description": "This file defines a mock API module for a frontend activity recommendation system. It includes functions to score activities based on team and quiz parameters, derive hero alignments, and simulate API calls for fetching recommendations, saving activities, and giving feedback.", "external_files": ["./mockData"], "external_methods": ["ACTIVITIES"], "published": ["mockApi"], "classes": [], "methods": [{"name": "deriveHero(a)", "description": "Determines a hero alignment label for an activity based on hints, tags, or default to 'Ally'.", "scope": "", "scopeKind": ""}, {"name": "scoreActivities({ team, quiz })", "description": "Scores a list of activities based on team and quiz parameters, taking into account department relevance, mode, energy, budget, interests, and tags.", "scope": "", "scopeKind": ""}, {"name": "getFeedback()", "scope": "mockApi", "scopeKind": "class", "description": "unavailable"}, {"name": "getRecommendations(payload)", "scope": "mockApi", "scopeKind": "class", "description": "unavailable"}, {"name": "getSaved()", "scope": "mockApi", "scopeKind": "class", "description": "unavailable"}, {"name": "giveFeedback(activityId, value)", "scope": "mockApi", "scopeKind": "class", "description": "unavailable"}, {"name": "saveRecommendation(item)", "scope": "mockApi", "scopeKind": "class", "description": "unavailable"}], "calls": ["wait", "ACTIVITIES.map", "ACTIVITIES.find", "setTimeout"], "search-terms": ["mockApi", "scoreActivities", "deriveHero", "recommendations", "feedback", "saveRecommendation", "mockData"], "state": 2, "file_id": 28, "knowledge_revision": 129, "git_revision": "2d04394afc157a1c8533ab3ec178cb1b474cc758", "revision_history": [{"61": ""}, {"125": "d35508435f254404c184c745e870f47cd83f6fb4"}, {"129": "2d04394afc157a1c8533ab3ec178cb1b474cc758"}], "ctags": [{"_type": "tag", "name": "deriveHero", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^function deriveHero(a) {$/", "language": "JavaScript", "kind": "function", "signature": "(a)"}, {"_type": "tag", "name": "feedback", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^let feedback = [];$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "getFeedback", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  getFeedback() { return [...feedback]; }$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "getRecommendations", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  async getRecommendations(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "getSaved", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  getSaved() { return [...saved]; },$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "giveFeedback", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  async giveFeedback(activityId, value) {$/", "language": "JavaScript", "kind": "method", "signature": "(activityId, value)", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "mockApi", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^const mockApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "saveRecommendation", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  async saveRecommendation(item) {$/", "language": "JavaScript", "kind": "method", "signature": "(item)", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "saved", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^let saved = [];$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "scoreActivities", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^function scoreActivities({ team, quiz }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ team, quiz })"}, {"_type": "tag", "name": "wait", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^const wait = (ms) => new Promise((res) => setTimeout(res, ms));$/", "language": "JavaScript", "kind": "constant"}], "hash": "7e411917471a6037113f47b1d5f57101", "format-version": 4, "code-base-name": "team_sync_frontend", "filename": "team_sync_frontend/src/mock/mockApi.js", "fields": [{"name": "let feedback = [];", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let saved = [];", "scope": "", "scopeKind": "", "description": "unavailable"}]}