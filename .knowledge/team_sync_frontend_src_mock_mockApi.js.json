{"is_source_file": true, "format": "JavaScript", "description": "This file defines a mock API for activity recommendations, including functions for scoring activities based on user team and quiz data, deriving hero alignments, and managing saved activities and feedback. It exports an object with asynchronous methods simulating API calls.", "external_files": ["./mockData"], "external_methods": ["ACTIVITIES"], "published": ["mockApi"], "classes": [], "methods": [{"name": "deriveHero(a)", "description": "Determines a playful hero alignment label for an activity based on tags and hints.", "scope": "", "scopeKind": ""}, {"name": "scoreActivities({ team, quiz })", "description": "Scores activities based on team, quiz, and activity attributes, ensuring at least one department-exclusive activity is included.", "scope": "", "scopeKind": ""}, {"name": "wait", "description": "Returns a promise that resolves after a specified delay, used to simulate network latency."}, {"name": "getFeedback()", "scope": "mockApi", "scopeKind": "class", "description": "unavailable"}, {"name": "getRecommendations(payload)", "scope": "mockApi", "scopeKind": "class", "description": "unavailable"}, {"name": "getSaved()", "scope": "mockApi", "scopeKind": "class", "description": "unavailable"}, {"name": "giveFeedback(activityId, value)", "scope": "mockApi", "scopeKind": "class", "description": "unavailable"}, {"name": "saveRecommendation(item)", "scope": "mockApi", "scopeKind": "class", "description": "unavailable"}], "calls": ["wait(300)", "wait(150)", "ACTIVITIES.find", "ACTIVITIES.map", "feedback.push", "saved.find"], "search-terms": ["mockApi", "recommendations", "activity scoring", "hero alignment", "mockData"], "state": 2, "file_id": 28, "knowledge_revision": 125, "git_revision": "d35508435f254404c184c745e870f47cd83f6fb4", "revision_history": [{"61": ""}, {"125": "d35508435f254404c184c745e870f47cd83f6fb4"}], "ctags": [{"_type": "tag", "name": "deriveHero", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^function deriveHero(a) {$/", "language": "JavaScript", "kind": "function", "signature": "(a)"}, {"_type": "tag", "name": "feedback", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^let feedback = [];$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "getFeedback", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  getFeedback() { return [...feedback]; }$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "getRecommendations", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  async getRecommendations(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "getSaved", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  getSaved() { return [...saved]; },$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "giveFeedback", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  async giveFeedback(activityId, value) {$/", "language": "JavaScript", "kind": "method", "signature": "(activityId, value)", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "mockApi", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^const mockApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "saveRecommendation", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  async saveRecommendation(item) {$/", "language": "JavaScript", "kind": "method", "signature": "(item)", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "saved", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^let saved = [];$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "scoreActivities", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^function scoreActivities({ team, quiz }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ team, quiz })"}, {"_type": "tag", "name": "wait", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^const wait = (ms) => new Promise((res) => setTimeout(res, ms));$/", "language": "JavaScript", "kind": "constant"}], "hash": "ae2529e56186dfa441d7a6a2f4039f22", "format-version": 4, "code-base-name": "team_sync_frontend", "filename": "team_sync_frontend/src/mock/mockApi.js", "fields": [{"name": "let feedback = [];", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let saved = [];", "scope": "", "scopeKind": "", "description": "unavailable"}]}