{"is_source_file": true, "format": "JavaScript", "description": "This file defines a mock API module for activities, including functions for scoring activities, fetching recommendations, saving activities, giving feedback, and retrieving analytics and personas, primarily used for testing or development purposes.", "external_files": ["./mockData", "../services/analytics"], "external_methods": ["require('../services/analytics')"], "published": ["mockApi"], "classes": [], "methods": [{"name": "getRecommendations(payload)", "description": "Fetches recommended activities based on the input payload, scoring and filtering activities according to team and quiz parameters.", "scope": "mockApi", "scopeKind": "class"}, {"name": "saveRecommendation(item)", "description": "Saves a given activity to the internal saved list, simulating persistence.", "scope": "mockApi", "scopeKind": "class"}, {"name": "giveFeedback(activityId, value)", "description": "Records user feedback for a specific activity, storing the feedback details.", "scope": "mockApi", "scopeKind": "class"}, {"name": "getAnalytics(range = '4w')", "description": "Returns analytics data such as success metrics, sentiment summary, trend buckets, and hero alignment breakdown based on stored feedback and saved activities.", "scope": "mockApi", "scopeKind": "class"}, {"name": "generatePersona(team = {}, quiz = {})", "description": "Generates a persona based on team and quiz data, possibly using external derivation functions.", "scope": "mockApi", "scopeKind": "class"}, {"name": "deriveHero(a)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "getDerivers()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "getFeedback()", "scope": "mockApi", "scopeKind": "class", "description": "unavailable"}, {"name": "getSaved()", "scope": "mockApi", "scopeKind": "class", "description": "unavailable"}, {"name": "scoreActivities({ team, quiz })", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["require('../services/analytics')", "ACTIVITIES.map", "ACTIVITIES.find", "setTimeout", "getDerivers().deriveSuccessMetrics", "getDerivers().deriveSentimentSummary", "getDerivers().deriveTrendBuckets", "getDerivers().deriveHeroAlignmentBreakdown", "wait()"], "search-terms": ["mockApi", "scoreActivities", "getRecommendations", "saveRecommendation", "giveFeedback", "getAnalytics", "generatePersona", "mockData", "activities scoring", "activity recommendations"], "state": 2, "file_id": 28, "knowledge_revision": 342, "git_revision": "9c388f33827659af6fa96c8bf27bdbe3c7078702", "revision_history": [{"61": ""}, {"125": "d35508435f254404c184c745e870f47cd83f6fb4"}, {"129": "2d04394afc157a1c8533ab3ec178cb1b474cc758"}, {"130": "42f6abdf2bca17d59c03cc3b5fb56911a0fdcf6e"}, {"145": "42f6abdf2bca17d59c03cc3b5fb56911a0fdcf6e"}, {"146": "42f6abdf2bca17d59c03cc3b5fb56911a0fdcf6e"}, {"158": "42f6abdf2bca17d59c03cc3b5fb56911a0fdcf6e"}, {"339": "c6dbcd61f4c2ec082a09305909d1434c65f25f9b"}, {"342": "9c388f33827659af6fa96c8bf27bdbe3c7078702"}], "ctags": [{"_type": "tag", "name": "__importedDerive", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^let __importedDerive = null;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "deriveHero", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^function deriveHero(a) {$/", "language": "JavaScript", "kind": "function", "signature": "(a)"}, {"_type": "tag", "name": "feedback", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^let feedback = [];$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "generatePersona", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  async generatePersona(team = {}, quiz = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "(team = {}, quiz = {})", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "getAnalytics", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  async getAnalytics(range = '4w') {$/", "language": "JavaScript", "kind": "method", "signature": "(range = '4w')", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "getDerivers", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^function getDerivers() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "getFeedback", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  getFeedback() { return [...feedback]; },$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "getRecommendations", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  async getRecommendations(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "getSaved", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  getSaved() { return [...saved]; },$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "giveFeedback", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  async giveFeedback(activityId, value) {$/", "language": "JavaScript", "kind": "method", "signature": "(activityId, value)", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "mockApi", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^const mockApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "saveRecommendation", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  async saveRecommendation(item) {$/", "language": "JavaScript", "kind": "method", "signature": "(item)", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "saved", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^let saved = [];$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "scoreActivities", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^function scoreActivities({ team, quiz }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ team, quiz })"}, {"_type": "tag", "name": "wait", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^const wait = (ms) => new Promise((res) => setTimeout(res, ms));$/", "language": "JavaScript", "kind": "constant"}], "hash": "b133880405db3316fbddb14e47b4c495", "format-version": 4, "code-base-name": "team_sync_frontend", "filename": "team_sync_frontend/src/mock/mockApi.js", "fields": [{"name": "let __importedDerive = null;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let feedback = [];", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let saved = [];", "scope": "", "scopeKind": "", "description": "unavailable"}]}