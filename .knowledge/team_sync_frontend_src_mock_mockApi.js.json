{"is_source_file": true, "format": "JavaScript", "description": "This file defines a mock API for a frontend application, providing functions to fetch activity recommendations based on user input, save recommendations, give feedback, and retrieve saved items and feedback.", "external_files": ["./mockData"], "external_methods": ["ACTIVITIES"], "published": ["mockApi"], "classes": [], "methods": [{"name": "getRecommendations(payload)", "description": "Fetches activity recommendations based on team and quiz parameters.", "scope": "mockApi", "scopeKind": "class"}, {"name": "saveRecommendation(item)", "description": "Saves a recommended activity to local storage.", "scope": "mockApi", "scopeKind": "class"}, {"name": "giveFeedback(activityId, value)", "description": "Records user feedback for a specific activity.", "scope": "mockApi", "scopeKind": "class"}, {"name": "getSaved()", "description": "Retrieves all saved activities.", "scope": "mockApi", "scopeKind": "class"}, {"name": "getFeedback()", "description": "Retrieves all feedback entries.", "scope": "mockApi", "scopeKind": "class"}, {"name": "scoreActivities({ team, quiz })", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["wait(300)", "scoreActivities(payload)", "wait(150)", "saved.find((s) => s.id === item.id)", "wait(150)", "ACTIVITIES.find((a) => a.id === activityId)"], "search-terms": ["mockApi", "mockData", "recommendations", "feedback", "mockApi.js"], "state": 2, "file_id": 28, "knowledge_revision": 61, "git_revision": "", "ctags": [{"_type": "tag", "name": "feedback", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^let feedback = [];$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "getFeedback", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  getFeedback() { return [...feedback]; }$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "getRecommendations", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  async getRecommendations(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "getSaved", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  getSaved() { return [...saved]; },$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "giveFeedback", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  async giveFeedback(activityId, value) {$/", "language": "JavaScript", "kind": "method", "signature": "(activityId, value)", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "mockApi", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^const mockApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "saveRecommendation", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^  async saveRecommendation(item) {$/", "language": "JavaScript", "kind": "method", "signature": "(item)", "scope": "mockApi", "scopeKind": "class"}, {"_type": "tag", "name": "saved", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^let saved = [];$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "scoreActivities", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^function scoreActivities({ team, quiz }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ team, quiz })"}, {"_type": "tag", "name": "wait", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/mock/mockApi.js", "pattern": "/^const wait = (ms) => new Promise((res) => setTimeout(res, ms));$/", "language": "JavaScript", "kind": "constant"}], "hash": "64cb4b8ec33b35cac9e02a57b4b40fb5", "format-version": 4, "code-base-name": "team_sync_frontend", "filename": "team_sync_frontend/src/mock/mockApi.js", "fields": [{"name": "let feedback = [];", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let saved = [];", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"61": ""}]}