{"is_source_file": true, "format": "JavaScript", "description": "This source file defines an API client module that interfaces with backend endpoints and provides fallback to mockApi when the backend is unavailable. It includes functions for fetching recommendations, saving recommendations, providing feedback, retrieving analytics data, and generating personas. Utility functions handle fetch requests with timeouts and JSON parsing, ensuring resilient network communication. The module reads the base URL from environment variables and exports an object with methods used throughout the application to interact with backend services.", "external_files": ["../mock/mockApi"], "external_methods": ["mockApi.getRecommendations", "mockApi.saveRecommendation", "mockApi.giveFeedback", "mockApi.getAnalytics", "mockApi.generatePersona"], "published": ["getRecommendations", "saveRecommendation", "giveFeedback", "getAnalytics", "generatePersona"], "classes": [], "methods": [{"name": "fetchJson(path, options = {})", "description": "Performs a fetch request with a timeout, parses the response as JSON, and handles errors.", "scope": "", "scopeKind": ""}, {"name": "postJson(path, body)", "description": "Utility to POST JSON data to a specified API endpoint using fetchJson.", "scope": "", "scopeKind": ""}, {"name": "getRecommendations(payload)", "description": "Retrieves a list of recommendations; attempts backend, falls back to mock.", "scope": "api", "scopeKind": "class"}, {"name": "saveRecommendation(item)", "description": "Saves a recommendation item; tries backend first, falls back to mock.", "scope": "api", "scopeKind": "class"}, {"name": "giveFeedback(activityId, value, activityTitle = '', comment = '', rating = 0)", "description": "Sends user feedback for an activity; prefers backend, falls back to mock.", "scope": "api", "scopeKind": "class"}, {"name": "getAnalytics(range = '4w', teamId)", "description": "Fetches analytics data for a team over a specified range; tries backend, falls back to mock.", "scope": "api", "scopeKind": "class"}, {"name": "generatePersona(team, quiz, context = { useCase: 'dashboard', locale: 'en-US' })", "description": "Generates a user persona based on team and quiz data; attempts backend, falls back to mock.", "scope": "api", "scopeKind": "class"}], "calls": ["fetch", "clearTimeout", "setTimeout", "postJson", "new URLSearchParams", "fetchJson"], "search-terms": ["api client", "recommendations", "fallback", "mockApi", "generatePersona", "analytics", "feedback", "POST /api/recommendations/save", "environment variables"], "state": 2, "file_id": 24, "knowledge_revision": 168, "git_revision": "c6dbcd61f4c2ec082a09305909d1434c65f25f9b", "revision_history": [{"51": ""}, {"69": "d35508435f254404c184c745e870f47cd83f6fb4"}, {"122": "fd92542c24dc9d6868faf0322c5b3c86ce04c9ed"}, {"147": "cc4f8b74c3d68f6c49b3db1b4cf2aef774662d90"}, {"168": "c6dbcd61f4c2ec082a09305909d1434c65f25f9b"}], "ctags": [{"_type": "tag", "name": "BASE_URL", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^const BASE_URL =$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^const api = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "fetchJson", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^async function fetchJson(path, options = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(path, options = {})"}, {"_type": "tag", "name": "generatePersona", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async generatePersona(team, quiz, context = { useCase: 'dashboard', locale: 'en-US' }) {$/", "language": "JavaScript", "kind": "method", "signature": "(team, quiz, context = { useCase: 'dashboard', locale: 'en-US' })", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "getAnalytics", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async getAnalytics(range = '4w', teamId) {$/", "language": "JavaScript", "kind": "method", "signature": "(range = '4w', teamId)", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "getRecommendations", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async getRecommendations(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "giveFeedback", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async giveFeedback(activityId, value, activityTitle = '', comment = '', rating = 0) {$/", "language": "JavaScript", "kind": "method", "signature": "(activityId, value, activityTitle = '', comment = '', rating = 0)", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "postJson", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^function postJson(path, body) {$/", "language": "JavaScript", "kind": "function", "signature": "(path, body)"}, {"_type": "tag", "name": "saveRecommendation", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async saveRecommendation(item) {$/", "language": "JavaScript", "kind": "method", "signature": "(item)", "scope": "api", "scopeKind": "class"}], "hash": "c5e853786909d47f76df65ce88fb7020", "format-version": 4, "code-base-name": "team_sync_frontend", "filename": "team_sync_frontend/src/services/api.js"}