{"is_source_file": true, "format": "JavaScript", "description": "This file defines an API client module for a React-based frontend project. It includes functions for making HTTP requests to backend endpoints with fallback to mock API implementations. The functions handle operations such as fetching recommendations, submitting feedback, retrieving analytics, generating personas, and gamification features. It also contains utility functions for handling fetch requests with timeout and JSON parsing.", "external_files": ["../mock/mockApi"], "external_methods": ["mockApi.getRecommendations", "mockApi.saveRecommendation", "mockApi.giveFeedback", "mockApi.getAnalytics", "mockApi.generatePersona"], "published": ["api"], "classes": [], "methods": [{"name": "fetchJson(path, options = {})", "description": "Performs fetch with a timeout, measures latency, and parses response as JSON.", "scope": "", "scopeKind": ""}, {"name": "postJson(path, body)", "description": "Helper to perform POST requests with JSON body.", "scope": "", "scopeKind": ""}, {"name": "getRecommendations(payload)", "description": "Fetches recommendations from backend, falls back to mock API on failure.", "scope": "api", "scopeKind": "class"}, {"name": "saveRecommendation(item)", "description": "Saves a recommendation item to backend, falls back to mock API on failure.", "scope": "api", "scopeKind": "class"}, {"name": "giveFeedback(activityId, value, activityTitle = '', comment = '', rating = 0)", "description": "Submits user feedback to backend, falls back to mock API on failure.", "scope": "api", "scopeKind": "class"}, {"name": "getAnalytics(range = '4w', teamId)", "description": "Retrieves analytics data for a team; if teamId is missing, attempts mock API first.", "scope": "api", "scopeKind": "class"}, {"name": "generatePersona(team, quiz, context = { useCase: 'dashboard', locale: 'en-US' })", "description": "Generates a persona for a team using backend or mock fallback.", "scope": "api", "scopeKind": "class"}, {"name": "postAIRecommendations(payload)", "description": "Calls backend AI endpoint for recommendations, falls back to mock.", "scope": "api", "scopeKind": "class"}, {"name": "getGamification(teamId)", "description": "Retrieves gamification info for a team, fallback to default.", "scope": "api", "scopeKind": "class"}, {"name": "awardGamification({ teamId, event, meta = {} })", "description": "Awards gamification points or badges, fallback to default response.", "scope": "api", "scopeKind": "class"}], "calls": ["fetch", "clearTimeout", "setTimeout", "performance.now", "performance && performance.now", "JSON.parse", "new URLSearchParams", "mockApi.getRecommendations", "mockApi.saveRecommendation", "mockApi.giveFeedback", "mockApi.getAnalytics", "mockApi.generatePersona"], "search-terms": ["api client", "fallback to mockApi", "Recommendations", "Feedback", "Analytics", "Persona", "AI recommendations", "Gamification", "API endpoints", "fetchJson"], "state": 2, "file_id": 24, "knowledge_revision": 236, "git_revision": "dfad21ab3d3c7bf4298538f82b297369998c6f4c", "revision_history": [{"51": ""}, {"69": "d35508435f254404c184c745e870f47cd83f6fb4"}, {"122": "fd92542c24dc9d6868faf0322c5b3c86ce04c9ed"}, {"147": "cc4f8b74c3d68f6c49b3db1b4cf2aef774662d90"}, {"168": "c6dbcd61f4c2ec082a09305909d1434c65f25f9b"}, {"176": "16c5db73e9d4651f4aa5baa46b9823a1edc039e1"}, {"177": "16c5db73e9d4651f4aa5baa46b9823a1edc039e1"}, {"232": "4d6c7c328c597f5c2f0168c0e4dd5afcfae61984"}, {"236": "dfad21ab3d3c7bf4298538f82b297369998c6f4c"}], "ctags": [{"_type": "tag", "name": "BASE_URL", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^const BASE_URL =$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^const api = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "awardGamification", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async awardGamification({ teamId, event, meta = {} }) {$/", "language": "JavaScript", "kind": "method", "signature": "({ teamId, event, meta = {} })", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "fetchJson", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^async function fetchJson(path, options = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(path, options = {})"}, {"_type": "tag", "name": "generatePersona", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async generatePersona(team, quiz, context = { useCase: 'dashboard', locale: 'en-US' }) {$/", "language": "JavaScript", "kind": "method", "signature": "(team, quiz, context = { useCase: 'dashboard', locale: 'en-US' })", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "getAnalytics", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async getAnalytics(range = '4w', teamId) {$/", "language": "JavaScript", "kind": "method", "signature": "(range = '4w', teamId)", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "getGamification", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async getGamification(teamId) {$/", "language": "JavaScript", "kind": "method", "signature": "(teamId)", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "getRecommendations", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async getRecommendations(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "giveFeedback", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async giveFeedback(activityId, value, activityTitle = '', comment = '', rating = 0) {$/", "language": "JavaScript", "kind": "method", "signature": "(activityId, value, activityTitle = '', comment = '', rating = 0)", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "postAIRecommendations", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async postAIRecommendations(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "postJson", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^function postJson(path, body) {$/", "language": "JavaScript", "kind": "function", "signature": "(path, body)"}, {"_type": "tag", "name": "saveRecommendation", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async saveRecommendation(item) {$/", "language": "JavaScript", "kind": "method", "signature": "(item)", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "teamId", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^      const payload = { teamId, event, meta };$/", "language": "JavaScript", "kind": "field", "scope": "api.awardGamification.payload", "scopeKind": "class"}], "hash": "f691ae93f53fd33213ffb76ff17fd4bd", "format-version": 4, "code-base-name": "team_sync_frontend", "filename": "team_sync_frontend/src/services/api.js", "fields": [{"name": "const payload = { teamId, event, meta };", "scope": "api.awardGamification.payload", "scopeKind": "class", "description": "unavailable"}]}