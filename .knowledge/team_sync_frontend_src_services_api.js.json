{"is_source_file": true, "format": "JavaScript", "description": "This file defines an API client module for a frontend project, providing functions to interact with backend services such as recommendations, analytics, personas, AI suggestions, and gamification. It includes fallback to mockApi when backend calls fail.", "external_files": ["../mock/mockApi"], "external_methods": ["mockApi.getRecommendations", "mockApi.saveRecommendation", "mockApi.giveFeedback", "mockApi.getAnalytics", "mockApi.generatePersona"], "published": ["getRecommendations", "saveRecommendation", "giveFeedback", "getAnalytics", "generatePersona", "postAIRecommendations", "getGamification", "awardGamification"], "classes": [], "methods": [{"name": "fetchJson(path, options = {})", "description": "Helper function to perform fetch with timeout and parse JSON response.", "scope": "", "scopeKind": ""}, {"name": "postJson(path, body)", "description": "Helper function to POST JSON data using fetchJson.", "scope": "", "scopeKind": ""}, {"name": "getRecommendations(payload)", "description": "Fetches activity recommendations from backend or falls back to mockApi.", "scope": "api", "scopeKind": "class"}, {"name": "saveRecommendation(item)", "description": "Saves a recommendation activity for a team, trying backend first then fallback.", "scope": "api", "scopeKind": "class"}, {"name": "giveFeedback(activityId, value, activityTitle = '', comment = '', rating = 0)", "description": "Sends user feedback about an activity to backend or fallback.", "scope": "api", "scopeKind": "class"}, {"name": "getAnalytics(range = '4w', teamId)", "description": "Retrieves analytics data for a team, backend preferred, fallback to mock.", "scope": "api", "scopeKind": "class"}, {"name": "generatePersona(team, quiz, context = { useCase: 'dashboard', locale: 'en-US' })", "description": "Generates a user persona based on team and quiz data, backend preferred, fallback to mock.", "scope": "api", "scopeKind": "class"}, {"name": "postAIRecommendations(payload)", "description": "Requests AI-generated activity recommendations, normalizes response, fallback to mock if needed.", "scope": "api", "scopeKind": "class"}, {"name": "getGamification(teamId)", "description": "Fetches gamification data for a team, fallback returns default.", "scope": "api", "scopeKind": "class"}, {"name": "awardGamification({ teamId, event, meta = {} })", "description": "Awards gamification points or badges, first tries backend then fallback.", "scope": "api", "scopeKind": "class"}], "calls": ["fetch", "clearTimeout", "setTimeout", "performance.now", "JSON.parse", "Array.isArray", "Object.prototype.toString", "URLSearchParams", "mockApi.getRecommendations", "mockApi.saveRecommendation", "mockApi.giveFeedback", "mockApi.getAnalytics", "mockApi.generatePersona"], "search-terms": ["api client", "recommendations", "analytics", "persona", "AI suggestions", "gamification", "fallback", "backend API"], "state": 2, "file_id": 24, "knowledge_revision": 247, "git_revision": "28137f378d9ec2e7e85337eb5a0ccdf46a4fc04f", "revision_history": [{"51": ""}, {"69": "d35508435f254404c184c745e870f47cd83f6fb4"}, {"122": "fd92542c24dc9d6868faf0322c5b3c86ce04c9ed"}, {"147": "cc4f8b74c3d68f6c49b3db1b4cf2aef774662d90"}, {"168": "c6dbcd61f4c2ec082a09305909d1434c65f25f9b"}, {"176": "16c5db73e9d4651f4aa5baa46b9823a1edc039e1"}, {"177": "16c5db73e9d4651f4aa5baa46b9823a1edc039e1"}, {"232": "4d6c7c328c597f5c2f0168c0e4dd5afcfae61984"}, {"236": "dfad21ab3d3c7bf4298538f82b297369998c6f4c"}, {"242": "dfad21ab3d3c7bf4298538f82b297369998c6f4c"}, {"243": "dfad21ab3d3c7bf4298538f82b297369998c6f4c"}, {"246": "28137f378d9ec2e7e85337eb5a0ccdf46a4fc04f"}, {"247": "28137f378d9ec2e7e85337eb5a0ccdf46a4fc04f"}], "ctags": [{"_type": "tag", "name": "BASE_URL", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^const BASE_URL =$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^const api = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "awardGamification", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async awardGamification({ teamId, event, meta = {} }) {$/", "language": "JavaScript", "kind": "method", "signature": "({ teamId, event, meta = {} })", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "fetchJson", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^async function fetchJson(path, options = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(path, options = {})"}, {"_type": "tag", "name": "generatePersona", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async generatePersona(team, quiz, context = { useCase: 'dashboard', locale: 'en-US' }) {$/", "language": "JavaScript", "kind": "method", "signature": "(team, quiz, context = { useCase: 'dashboard', locale: 'en-US' })", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "getAnalytics", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async getAnalytics(range = '4w', teamId) {$/", "language": "JavaScript", "kind": "method", "signature": "(range = '4w', teamId)", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "getGamification", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async getGamification(teamId) {$/", "language": "JavaScript", "kind": "method", "signature": "(teamId)", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "getRecommendations", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async getRecommendations(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "giveFeedback", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async giveFeedback(activityId, value, activityTitle = '', comment = '', rating = 0) {$/", "language": "JavaScript", "kind": "method", "signature": "(activityId, value, activityTitle = '', comment = '', rating = 0)", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "postAIRecommendations", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async postAIRecommendations(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "postJson", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^function postJson(path, body) {$/", "language": "JavaScript", "kind": "function", "signature": "(path, body)"}, {"_type": "tag", "name": "saveRecommendation", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^  async saveRecommendation(item) {$/", "language": "JavaScript", "kind": "method", "signature": "(item)", "scope": "api", "scopeKind": "class"}, {"_type": "tag", "name": "teamId", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^        teamId,$/", "language": "JavaScript", "kind": "field", "scope": "api.saveRecommendation.payload", "scopeKind": "class"}, {"_type": "tag", "name": "teamId", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/services/api.js", "pattern": "/^      const payload = { teamId, event, meta };$/", "language": "JavaScript", "kind": "field", "scope": "api.awardGamification.payload", "scopeKind": "class"}], "hash": "46f61bc50c81ff424d17544a4277990d", "format-version": 4, "code-base-name": "team_sync_frontend", "filename": "team_sync_frontend/src/services/api.js", "fields": [{"name": "teamId,", "scope": "api.saveRecommendation.payload", "scopeKind": "class", "description": "unavailable"}, {"name": "const payload = { teamId, event, meta };", "scope": "api.awardGamification.payload", "scopeKind": "class", "description": "unavailable"}]}