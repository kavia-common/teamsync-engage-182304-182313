{"is_source_file": true, "format": "JavaScript", "description": "This file defines a Zustand store for managing global application state in a React project, including user team info, quiz settings, saved activities, feedback, plan details, analytics, persona, gamification metrics, and associated actions.", "external_files": ["../services/api"], "external_methods": ["import { create } from 'zustand'", "api.getGamification"], "published": ["useZStore", "selectGamification", "selectPoints", "selectBadges", "selectHistory", "selectLastEarnedBadgeId"], "classes": [], "methods": [{"name": "setTeam", "description": "Updates the team state with provided team details."}, {"name": "setQuiz", "description": "Updates the quiz state with provided quiz details."}, {"name": "saveRecommendation", "description": "Adds a new recommendation item to the saved list if not already present."}, {"name": "giveFeedback", "description": "Appends user feedback to the feedback list with a timestamp."}, {"name": "clearRecommendations", "description": "Placeholder for clearing recommendations; currently resets state object."}, {"name": "setPlan", "description": "Updates the plan state with new plan details."}, {"name": "setTimeRange", "description": "Sets the time range filter for analytics or views."}, {"name": "setAnalytics", "description": "Sets the analytics state with provided analytics data."}, {"name": "setPersona", "description": "Sets the persona state with provided persona analysis."}, {"name": "refreshGamification", "description": "Fetches gamification data for a team from the backend via an API call and updates the store."}, {"name": "recordAward", "description": "Records an event in gamification, updates points, history, and badges, with local optimistic update."}], "calls": ["import('../services/api').default", "api.getGamification", "set"], "search-terms": ["zustand", "gamification", "public interface", "store", "react state", "team", "quiz", "feedback", "badges", "history"], "state": 2, "file_id": 31, "knowledge_revision": 191, "git_revision": "4d6c7c328c597f5c2f0168c0e4dd5afcfae61984", "revision_history": [{"100": ""}, {"134": "5faf0ccad6bab71d478077baed33cee54dce95a5"}, {"148": "f6f84efb1d153d763ac551588f4fb4392184e477"}, {"174": "c6dbcd61f4c2ec082a09305909d1434c65f25f9b"}, {"175": "c6dbcd61f4c2ec082a09305909d1434c65f25f9b"}, {"191": "4d6c7c328c597f5c2f0168c0e4dd5afcfae61984"}], "ctags": [{"_type": "tag", "name": "selectBadges", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/state/store.zustand.js", "pattern": "/^export const selectBadges = (s) => (s.gamification?.badges ?? []);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "selectGamification", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/state/store.zustand.js", "pattern": "/^export const selectGamification = (s) => s.gamification || { points: 0, badges: [], history: [] /", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "selectHistory", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/state/store.zustand.js", "pattern": "/^export const selectHistory = (s) => (s.gamification?.history ?? []);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "selectLastEarnedBadgeId", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/state/store.zustand.js", "pattern": "/^export const selectLastEarnedBadgeId = (s) => s.gamification?.lastEarnedBadgeId || null;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "selectPoints", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/state/store.zustand.js", "pattern": "/^export const selectPoints = (s) => (s.gamification?.points ?? 0);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "useZStore", "path": "/home/kavia/workspace/code-generation/teamsync-engage-182304-182313/team_sync_frontend/src/state/store.zustand.js", "pattern": "/^export const useZStore = create((set, get) => ({$/", "language": "JavaScript", "kind": "constant"}], "hash": "84ac36866e3baca00d9cffe1444ed67c", "format-version": 4, "code-base-name": "team_sync_frontend", "filename": "team_sync_frontend/src/state/store.zustand.js"}